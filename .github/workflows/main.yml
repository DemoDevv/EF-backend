name: EF-Backend tests

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

env:
  CARGO_TERM_COLOR: always

  DEVELOPMENT: true
  VERSION: 0.0.7
  AUTH_DRIVER: jwt
  DATABASE_URL: postgres://user:password@localhost/mydatabase
  REDIS_URL: redis://user@localhost:6379
  REDIS_USERNAME: user
  REDIS_PASSWORD: ""
  REDIS_PORT: 6379
  REDIS_HOST: 127.0.0.1

  JWT_SECRET: test
  JWT_EXPIRED_IN: 5

  REFRESH_TOKEN_TTL: 60

  OAUTH_CLIENT_ID: id
  OAUTH_CLIENT_SECRET: secret
  OAUTH_REDIRECT_URL: http://localhost:8080/api/v1/oauth/google/oauth2callback
  OAUTH_AUTH_URL: https://accounts.google.com/o/oauth2/v2/auth
  OAUTH_TOKEN_URL: https://oauth2.googleapis.com/token

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: mydatabase
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Install diesel_cli
        run: cargo install diesel_cli --locked --no-default-features --features "postgres" || true

      - name: Run database migrations
        run: diesel migration run

      - name: Build
        run: cargo build --verbose

      - name: Test
        run: cargo test --verbose
